Customization guide:
1) prepare the database
Android requires specific table in the database. Open the database with sqlite3 typing in the terminal:
sqlite3 skieur_tests2013_.sqlite

Type the text (you may copy-paste):
CREATE TABLE "android_metadata" ("locale" TEXT DEFAULT 'en_US');
insert into anroid_metadata values ("fr_FR");


exit sqlite3 by pressing Ctrl+D


2) Create a new Android project. Copy all sources from Test Snowboards project. You will need the following folders:

src/
libs/
res/
assets/
AndroidManifest.xml

3) Adjust AndroidManifest.xml
Change the package definition, version and other project-specific data

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.niveales.testskis"
    android:installLocation="preferExternal"
    android:versionCode="1"
    android:versionName="beta 12" >
    
Check the definition of the Activities and Aplication under the following section:

<application
        android:name="com.niveales.testskis.TestSkisApplication"
        android:icon="@drawable/tests_skis_ic_launcher"
        android:label="@string/tests_skis_app_name"
        android:theme="@style/AppTheme" >
        
It should reference the correct package names.

After changing the package definition - you will be required to adjust imports in the "Application.java"
This should be the only place for imports customization after the project package change.

    
4) prepare assets
Put all product photos in the assets/Photo folder

Put DB in a zip compressed file placed in your project's assets/ directory. This zip file must contain a single SQLite database file.
rename DB file, add ".jpg" extension

The SQLite database file must be the only file within the zip archive. The databse file itself can be named anything you like. ZIP compression is used to minimize APK file size while ensuring that aapt (part of the Android build process) does not corrupt large database files during its own compression process.

If you have some image references in the database (except the product photos) or in the HTML files (f.e. for product detail view) - put those images in the assets/ folder.


5) adjust layouts
Pay attention to the following information:
product_list_item_layout.xml - a XML file, defining how your list item will looks like
It exists in the res/layout/, res/layout-xlarge/  folders. This is done to customize the view of the item in the small devices
All items should exists in both layouts, you cannot delete any item. If you need, you can hide any item in the res/layout/product_list_item_layout.xml file 
adding  android:visibility="gone"  tag.
This is very important for correct app functioning. "GONE" views will not be shown in the small screens.

6) after adjusting layouts you need to customize the "Application.java" file.
You need to define the binding between the database columns and layout items.
Open TestSkisApplication.java, scroll to definition of the ProductListConstants class. You will find two array constants:
PRODUCT_LIST_DISPLAY_COLUMNS
PRODUCT_LIST_DISPLAY_VIEW_IDS

You need to add your specific column names from the DB and corresponding views in the product_list_item_layout.xml


ALL DONE, YOU MAY RUN THE APP


